{"ast":null,"code":"var _jsxFileName = \"/home/john/ShoppingSpree/frontend/src/components/Grid/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { saveCurrentLayout } from \"../../store/layout\";\nimport Point from \"../Point\";\nimport CreateLayoutForm from \"./CreateNewLayoutForm\";\nimport Item from \"../Item\";\nimport \"./grid.css\"; // use  context provider to determine what ill be clicking?\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Grid = props => {\n  _s();\n\n  let start = \"start\";\n  let end = \"end\";\n  let rows = 30;\n  let dispatch = useDispatch();\n  let columns = 62;\n  const [grid, setGrid] = useState([]);\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [random, setRandom] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n  let currPointer = props.currPointer;\n\n  const toggleCreateWatchlistForm = async e => {\n    setShowModal(true);\n  };\n\n  const handleOnClear = () => {\n    let newGrid = clearGrid();\n    setGrid(newGrid);\n  };\n\n  function clearGrid() {\n    let newGrid = [];\n\n    for (let i = 0; i < rows; i++) {\n      let currRow = [];\n\n      for (let j = 0; j < columns; j++) {\n        currRow.push({\n          row: i,\n          column: j,\n          type: \"none\"\n        });\n      }\n\n      newGrid.push(currRow);\n    }\n\n    return newGrid;\n  }\n\n  useEffect(() => {\n    let newGrid = clearGrid();\n    setGrid(newGrid);\n  }, []);\n\n  function mouseDown(row, col, e, type) {\n    let newGrid = handleChange(row, col, grid);\n    setGrid(newGrid);\n    setIsMouseDown(true);\n    return currPointer;\n  }\n\n  function mouseEnter(row, col, e, type) {\n    if (isMouseDown && currPointer !== start && currPointer !== end) {\n      let newGrid = handleChange(row, col, grid); // console.log(\"Adding css class to\" ,row,col)\n      // e.target.classList.remove(\"none\",\"wall\",\"start\",\"end\")\n      // e.target.classList.add(type)\n\n      setRandom(!random);\n      setGrid(newGrid);\n      return currPointer;\n    }\n  }\n\n  function mouseUp(row, col) {\n    setIsMouseDown(false);\n  }\n\n  function handleChange(row, col, grid) {\n    let newGrid = grid;\n\n    if (newGrid[row][col].type === null || newGrid[row][col].type !== currPointer) {\n      if (currPointer === 'start' || currPointer === 'end') {\n        resetStartInGrid();\n      }\n\n      newGrid[row][col].type = currPointer;\n    } else if (newGrid[row][col].type === currPointer) {\n      newGrid[row][col].type = null;\n    }\n\n    return newGrid;\n  }\n\n  function resetStartInGrid() {\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (grid[i][j].type === currPointer) grid[i][j].type = \"none\";\n      }\n    }\n  }\n\n  async function handleSaveLayout(e) {\n    await dispatch(saveCurrentLayout(grid));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: async e => {\n        handleSaveLayout(e);\n      },\n      children: \" Save Layout \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), \"LAYOUT NAME HERE OR PLACEHOLDER\", /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Edit name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOnClear,\n      children: \"Clear Layout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Delete Layout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCreateWatchlistForm,\n      children: \"Create New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), showModal && /*#__PURE__*/_jsxDEV(CreateLayoutForm, {\n      setShowModal: setShowModal,\n      showModal: showModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Item, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: grid.map((currRow, currRowIndex) => {\n        // return <Point x={1}></Point>\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: currRow.map((currColumn, currColumnIndex) => /*#__PURE__*/_jsxDEV(Point, {\n            x: currRowIndex,\n            y: currColumnIndex,\n            type: grid[currRowIndex][currColumnIndex].type,\n            rows: rows,\n            columns: columns,\n            currPointer: currPointer,\n            mouseDown: mouseDown,\n            mouseEnter: mouseEnter,\n            mouseUp: mouseUp,\n            onMouseDown: () => {\n              props.mouseDown(currRowIndex, currColumnIndex);\n            },\n            onMouseEnter: e => {\n              props.mouseEnter(currRowIndex, currColumnIndex);\n            },\n            onMouseUp: e => {\n              props.mouseUp(currRowIndex, currColumnIndex);\n            },\n            children: \" \"\n          }, `${currRowIndex} ${currColumnIndex} point`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 55\n          }, this))\n        }, `${currRowIndex} column`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Grid, \"KcjzvPq+MgJSEEzDFXnCZl+fUh4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/home/john/ShoppingSpree/frontend/src/components/Grid/index.js"],"names":["useEffect","useState","useDispatch","saveCurrentLayout","Point","CreateLayoutForm","Item","Grid","props","start","end","rows","dispatch","columns","grid","setGrid","isMouseDown","setIsMouseDown","random","setRandom","showModal","setShowModal","currPointer","toggleCreateWatchlistForm","e","handleOnClear","newGrid","clearGrid","i","currRow","j","push","row","column","type","mouseDown","col","handleChange","mouseEnter","mouseUp","resetStartInGrid","handleSaveLayout","map","currRowIndex","currColumn","currColumnIndex"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useDispatch } from \"react-redux\";\nimport { saveCurrentLayout } from \"../../store/layout\";\nimport Point from \"../Point\";\nimport CreateLayoutForm from \"./CreateNewLayoutForm\";\nimport Item from \"../Item\";\nimport \"./grid.css\"\n// use  context provider to determine what ill be clicking?\nconst Grid = (props) =>{\n    let start = \"start\"\n    let end = \"end\"\n    let rows = 30\n    let dispatch = useDispatch()\n    let columns = 62\n    const [grid,setGrid] = useState([]);\n    const [isMouseDown,setIsMouseDown] = useState(false)\n    const [random,setRandom] = useState(true)\n    const [showModal, setShowModal] = useState(false);\n    let currPointer = props.currPointer;\n\n\n    const toggleCreateWatchlistForm = async e => {\n        setShowModal(true);\n      };\n\n    const handleOnClear = () => {\n        let newGrid = clearGrid()\n        setGrid(newGrid)\n    }\n    function clearGrid(){\n        let newGrid = []\n        for(let i = 0 ; i < rows ; i++){\n            let currRow = [];\n            for(let j = 0 ; j < columns ; j++){\n                currRow.push({\n                    row:i,\n                    column:j,\n                    type:\"none\"\n                })\n            }\n            newGrid.push(currRow)\n        }\n        return newGrid;\n    }\n    useEffect( () => {\n        let newGrid = clearGrid();\n        setGrid(newGrid)\n\n    },[])\n    function mouseDown(row,col,e,type){\n        let newGrid = handleChange(row,col,grid);\n        setGrid(newGrid)\n        setIsMouseDown(true)\n\n        return currPointer\n    }\n    function mouseEnter(row,col,e,type){\n        if (isMouseDown && currPointer!== start && currPointer!== end){\n        let newGrid = handleChange(row,col,grid)\n\n        // console.log(\"Adding css class to\" ,row,col)\n        // e.target.classList.remove(\"none\",\"wall\",\"start\",\"end\")\n        // e.target.classList.add(type)\n        setRandom(!random)\n        setGrid(newGrid)\n\n\n        return currPointer\n        }\n    }\n    function mouseUp(row,col){\n        setIsMouseDown(false)\n    }\n\n    function handleChange(row,col,grid){\n        let newGrid = grid;\n        if(newGrid[row][col].type === null || newGrid[row][col].type !== currPointer){\n            if(currPointer === 'start' || currPointer === 'end'){\n                resetStartInGrid();\n            }\n            newGrid[row][col].type = currPointer\n        }\n         else if(newGrid[row][col].type === currPointer){\n            newGrid[row][col].type = null\n         }\n         return newGrid\n    }\n    function resetStartInGrid(){\n        for(let i = 0 ; i < rows ; i++ ){\n            for (let j = 0 ; j < columns;j++){\n                if(grid[i][j].type === currPointer ) grid[i][j].type = \"none\"\n            }\n        }\n    }\n    async function handleSaveLayout(e){\n        await dispatch(saveCurrentLayout(grid))\n    }\n    return <div>\n        <button onClick={ async (e)=>{\n            handleSaveLayout(e)\n        }}> Save Layout </button>\n\n        {\"LAYOUT NAME HERE OR PLACEHOLDER\"}\n            <button>Edit name</button>\n            <button onClick={handleOnClear}>Clear Layout</button>\n        <button>Delete Layout</button>\n        <button onClick={toggleCreateWatchlistForm}>Create New</button>\n        {showModal && <CreateLayoutForm setShowModal={setShowModal} showModal={showModal}></CreateLayoutForm>}\n        <Item></Item>\n    <div className=\"grid\">\n    {grid.map((currRow,currRowIndex) => {\n        // return <Point x={1}></Point>\n        return <div className=\"column\" key={`${currRowIndex} column`}>\n        {currRow.map( (currColumn,currColumnIndex) => <Point\n        key={`${currRowIndex} ${currColumnIndex} point`}\n         x={currRowIndex}\n         y={currColumnIndex}\n         type={grid[currRowIndex][currColumnIndex].type}\n         rows={rows}\n         columns={columns}\n         currPointer={currPointer}\n         mouseDown={mouseDown}\n         mouseEnter={mouseEnter}\n         mouseUp={mouseUp}\n         onMouseDown={() => {props.mouseDown(currRowIndex,currColumnIndex)\n         }}\n         onMouseEnter={(e)=> {props.mouseEnter(currRowIndex,currColumnIndex)}}\n         onMouseUp={(e)=>{props.mouseUp(currRowIndex,currColumnIndex)\n         }}\n         > </Point>)}\n        </div>\n    })}\n     </div>\n     </div>\n}\n\nexport default Grid\n"]},"metadata":{},"sourceType":"module"}