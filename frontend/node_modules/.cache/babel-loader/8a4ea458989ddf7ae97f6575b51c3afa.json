{"ast":null,"code":"var _jsxFileName = \"/home/john/ShoppingSpree/frontend/src/components/Grid/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Point from \"../Point\";\nimport \"./grid.css\"; // use  context provider to determine what ill be clicking?\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Grid = () => {\n  _s();\n\n  let rows = 30;\n  let columns = 65;\n  const [grid, setGrid] = useState([]);\n  useEffect(() => {\n    //when trying to map over the 2d array if the values are empty it doesn actually do anything but itll if I add things\n    let newGrid = []; // for (let i  = 0 ;  i < 10;i++){\n    //     newGrid[i] = new Array(10)\n    //     newGrid[i][0] = 1\n    //     newGrid[i][1] = 2\n    //     newGrid[i][2] = 3\n    //     newGrid[i][3] = 4\n    //     newGrid[i][4] = 5\n    //     newGrid[i][5] = 6\n    //     newGrid[i][6] = 7\n    //     newGrid[i][7] = 8\n    //     newGrid[i][8] = 9\n    //     newGrid[i][9] = 10\n    // }\n\n    for (let i = 0; i < rows; i++) {\n      let currRow = [];\n\n      for (let j = 0; j < columns; j++) {\n        currRow.push(undefined);\n      }\n\n      newGrid.push(currRow);\n    }\n\n    setGrid(newGrid);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: grid.map((currRow, currRowIndex) => {\n      // return <Point x={1}></Point>\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: currRow.map((currColumn, currColumnIndex) => /*#__PURE__*/_jsxDEV(Point, {\n          x: currRowIndex,\n          y: currColumnIndex,\n          rows: rows,\n          columns: columns,\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 55\n        }, this))\n      }, currRowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Grid, \"owlWVbES+DCGU/3HWNCJxd3FI3E=\");\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/home/john/ShoppingSpree/frontend/src/components/Grid/index.js"],"names":["useEffect","useState","Point","Grid","rows","columns","grid","setGrid","newGrid","i","currRow","j","push","undefined","map","currRowIndex","currColumn","currColumnIndex"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAO,YAAP,C,CACA;;;;AACA,MAAMC,IAAI,GAAG,MAAK;AAAA;;AACd,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,OAAO,GAAG,EAAd;AAEA,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBN,QAAQ,CAAC,EAAD,CAA/B;AAEAD,EAAAA,SAAS,CAAE,MAAM;AACb;AACA,QAAIQ,OAAO,GAAG,EAAd,CAFa,CAGb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAgBA,CAAC,GAAGL,IAApB,EAA2BK,CAAC,EAA5B,EAA+B;AAC3B,UAAIC,OAAO,GAAG,EAAd;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAgBA,CAAC,GAAGN,OAApB,EAA8BM,CAAC,EAA/B,EAAkC;AAC9BD,QAAAA,OAAO,CAACE,IAAR,CAAaC,SAAb;AACH;;AACDL,MAAAA,OAAO,CAACI,IAAR,CAAaF,OAAb;AACH;;AACDH,IAAAA,OAAO,CAACC,OAAD,CAAP;AAEH,GAzBQ,EAyBP,EAzBO,CAAT;AA0BA,sBAAO;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,cACNF,IAAI,CAACQ,GAAL,CAAS,CAACJ,OAAD,EAASK,YAAT,KAA0B;AAChC;AACA,0BAAO;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,kBACNL,OAAO,CAACI,GAAR,CAAa,CAACE,UAAD,EAAYC,eAAZ,kBAAgC,QAAC,KAAD;AAAO,UAAA,CAAC,EAAEF,YAAV;AAAwB,UAAA,CAAC,EAAEE,eAA3B;AAA4C,UAAA,IAAI,EAAEb,IAAlD;AAAwD,UAAA,OAAO,EAAEC,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA7C;AADM,SAA6BU,YAA7B;AAAA;AAAA;AAAA;AAAA,cAAP;AAGH,KALA;AADM;AAAA;AAAA;AAAA;AAAA,UAAP;AAQH,CAxCD;;GAAMZ,I;;KAAAA,I;AA0CN,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from \"react\"\nimport Point from \"../Point\";\nimport \"./grid.css\"\n// use  context provider to determine what ill be clicking?\nconst Grid = () =>{\n    let rows = 30\n    let columns = 65\n\n    const [grid,setGrid] = useState([]);\n\n    useEffect( () => {\n        //when trying to map over the 2d array if the values are empty it doesn actually do anything but itll if I add things\n        let newGrid = []\n        // for (let i  = 0 ;  i < 10;i++){\n        //     newGrid[i] = new Array(10)\n        //     newGrid[i][0] = 1\n        //     newGrid[i][1] = 2\n        //     newGrid[i][2] = 3\n        //     newGrid[i][3] = 4\n        //     newGrid[i][4] = 5\n        //     newGrid[i][5] = 6\n        //     newGrid[i][6] = 7\n        //     newGrid[i][7] = 8\n        //     newGrid[i][8] = 9\n        //     newGrid[i][9] = 10\n        // }\n        for(let i = 0 ; i < rows ; i++){\n            let currRow = [];\n            for(let j = 0 ; j < columns ; j++){\n                currRow.push(undefined)\n            }\n            newGrid.push(currRow)\n        }\n        setGrid(newGrid)\n\n    },[])\n    return <div className=\"grid\">\n    {grid.map((currRow,currRowIndex) => {\n        // return <Point x={1}></Point>\n        return <div className=\"column\" key={currRowIndex}>\n        {currRow.map( (currColumn,currColumnIndex) => <Point x={currRowIndex} y={currColumnIndex} rows={rows} columns={columns}> </Point>)}\n        </div>\n    })}\n     </div>\n}\n\nexport default Grid\n"]},"metadata":{},"sourceType":"module"}