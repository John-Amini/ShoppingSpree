{"ast":null,"code":"var _jsxFileName = \"/home/john/ShoppingSpree/frontend/src/components/Grid/CreateNewLayoutForm/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Modal2 } from './context/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateLayoutForm = ({\n  showModal,\n  setShowModal\n}) => {\n  _s();\n\n  const sessionUser = useSelector(state => state.session.user);\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState('');\n  const [validationErrors, setValidationErrors] = useState([]);\n\n  const updateTitle = e => setTitle(e.target.value);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const errors = [];\n\n    if (title) {\n      const button = document.getElementById('submitCreateWatchlist');\n      const titleInput = document.getElementById('titleInput');\n      button.disabled = true;\n      titleInput.disabled = true;\n      let createdWatchlist = {}; //dispatch here\n\n      if (createdWatchlist.error) {\n        errors.push(createdWatchlist.error);\n        button.disabled = false;\n        titleInput.disabled = false;\n        setValidationErrors(errors);\n      } else {\n        // new watch list was created need to rerender or reload\n        setShowModal(false);\n      }\n    }\n  };\n\n  let count = 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-watchlist-container\",\n    children: /*#__PURE__*/_jsxDEV(Modal2, {\n      className: \"modalWatchlist\",\n      title: `Create New layout`,\n      onClose: () => setShowModal(false),\n      show: showModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"createWatchlistForm\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: validationErrors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"errorsContainer\",\n              children: validationErrors.map(currError => {\n                return /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: currError\n                }, `error-${count++}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 24\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"textarea\",\n            id: \"titleInput\",\n            placeholder: \"Title\",\n            value: title,\n            onChange: updateTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"submitCreateWatchlist\",\n            type: 'submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateLayoutForm, \"SOCGShxL7P57fZUlgwSZ85qvIjk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CreateLayoutForm;\nexport default CreateLayoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateLayoutForm\");","map":{"version":3,"sources":["/home/john/ShoppingSpree/frontend/src/components/Grid/CreateNewLayoutForm/index.js"],"names":["useState","useDispatch","useSelector","Modal2","CreateLayoutForm","showModal","setShowModal","sessionUser","state","session","user","dispatch","title","setTitle","validationErrors","setValidationErrors","updateTitle","e","target","value","handleSubmit","preventDefault","errors","button","document","getElementById","titleInput","disabled","createdWatchlist","error","push","count","length","map","currError"],"mappings":"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","sourcesContent":["import { useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Modal2 } from './context/Modal'\nconst CreateLayoutForm = ({showModal,setShowModal}) => {\n    const sessionUser = useSelector(state => state.session.user);\n    const dispatch = useDispatch();\n    const [title, setTitle] = useState('');\n    const [validationErrors, setValidationErrors] = useState([]);\n\n    const updateTitle = e => setTitle(e.target.value);\n    const handleSubmit = async e => {\n      e.preventDefault();\n      const errors = [];\n      if (title) {\n        const button = document.getElementById('submitCreateWatchlist');\n        const titleInput = document.getElementById('titleInput');\n\n        button.disabled = true;\n        titleInput.disabled = true;\n        let createdWatchlist ={} //dispatch here\n        if (createdWatchlist.error) {\n          errors.push(createdWatchlist.error);\n          button.disabled = false;\n          titleInput.disabled = false;\n          setValidationErrors(errors);\n        } else {\n          // new watch list was created need to rerender or reload\n          setShowModal(false)\n        }\n      }\n    };\n    let count = 0;\nreturn (\n    <div className='create-watchlist-container'>\n    <Modal2\n    className={\"modalWatchlist\"}\n    title={`Create New layout`}\n          onClose={() => setShowModal(false)}\n          show={showModal}>\n      <div>\n        <form className='createWatchlistForm' onSubmit={handleSubmit}>\n          <div>\n          {validationErrors.length > 0 && (\n          <div className='errorsContainer'>\n              {validationErrors.map(currError => {\n                return <p key={`error-${count++}`}>{currError}</p>;\n              })}\n            </div>\n          )}\n            </div>\n\n            <input\n              type='textarea'\n              id='titleInput'\n              placeholder='Title'\n              value={title}\n              onChange={updateTitle}\n            />\n          <input id='submitCreateWatchlist' type={'submit'}></input>\n        </form>\n      </div>\n    </Modal2>\n    </div>\n  );\n\n}\n\nexport default CreateLayoutForm\n"]},"metadata":{},"sourceType":"module"}